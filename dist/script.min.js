let pokemonRepository = function () { let e = [], t = "https://pokeapi.co/api/v2/pokemon/?limit=150", n = document.querySelector("#modal-container"); function o(t) { "object" == typeof t && "name" in t ? e.push(t) : console.error("Not the right PokÃ©mon!") } function i(e) { a(); let t = e.detailsUrl; return fetch(t).then(function (e) { return e.json() }).then(function (t) { e.imageUrl = t.sprites.front_default, e.height = t.height, e.types = [], t.types.forEach(function (t) { return e.types.push(t.type.name) }) }).then(function () { l() }).catch(function (e) { console.error(e) }) } let s = document.querySelector(".pokemon-list"); function a() { document.querySelector(".loadingImage").classList.add("showImg") } function l() { document.querySelector(".loadingImage").classList.remove("showImg") } function c(e) { i(e).then(function () { r(e) }) } function r(e) { document.getElementById("modalTitle").innerText = e.name; let t = document.getElementById("heightDetail"); t.innerText = "Height: " + e.height, t.classList.add("modal-body"); let n = document.getElementById("typeDetail"); n.innerText = "Type: " + e.types, n.classList.add("modal-body"), document.getElementById("imgDetail").src = e.imageUrl } function d() { n.classList.remove("is-visible") } return document.forms.filter.querySelector("input").addEventListener("keyup", function (e) { let t = e.target.value.toLowerCase(), n = s.getElementsByTagName("li"); Array.from(n).forEach(function (e) { -1 != e.firstElementChild.textContent.toLowerCase().indexOf(t) ? e.style.display = "block" : e.style.display = "none" }) }), window.addEventListener("keydown", e => { let t = document.querySelector("#modal-container"); "Escape" === e.key && t.classList.contains("is-visible") && d() }), n.addEventListener("click", e => { e.target === n && d() }), { getAll: function () { return e }, add: o, addListItem: function (e) { let t = document.querySelector(".pokemon-list"), n = document.createElement("li"); n.classList.add("list-group-item"); let o = document.createElement("button"); o.innerText = e.name, o.classList.add("btn", "btn-block"), function (e, t) { for (const [n, o] of Object.entries(t)) e.setAttribute(n, o) }(o, { "data-toggle": "modal", "data-target": "#modal-container" }), o.addEventListener("click", function () { c(e) }), n.appendChild(o), t.appendChild(n) }, loadList: function () { return a(), fetch(t).then(function (e) { return e.json() }).then(function (e) { e.results.forEach(function (e) { o({ name: e.name, detailsUrl: e.url }) }) }).then(function () { l() }).catch(function (e) { console.error(e) }) }, loadDetails: i, showDetails: c, showLoadingMessage: a, hideLoadingMessage: l, showModal: r, hideModal: d } }(); pokemonRepository.loadList().then(function () { pokemonRepository.showLoadingMessage(), setTimeout(function () { pokemonRepository.getAll().forEach(function (e) { pokemonRepository.addListItem(e) }), pokemonRepository.hideLoadingMessage() }, 1e3) });